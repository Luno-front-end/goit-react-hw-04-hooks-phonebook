{"version":3,"sources":["components/PhoneBock.module.css","components/Form.js","components/ContactList.js","components/SearchContact.js","App.js","index.js"],"names":["module","exports","Form","contactList","onSubmit","useState","name","setName","number","setNumber","InputValues","e","currentTarget","value","resetInputValues","idName","shortid","generate","idNumber","className","s","form","lengthInputNemeChech","length","lengthInputNumberChech","preventDefault","alert","id","htmlFor","labelName","type","onChange","autoComplete","labelNumber","placeholder","pattern","btnForm","СontactList","onDeleted","map","href","btnList","onClick","SearchContact","velue","containerSearch","labelSearch","inputSearch","Mobile","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","window","setItem","stringify","container","headingForm","NewContact","newName","numbers","some","Object","values","join","filterValues","toLowerCase","contact","includes","getFilter","contactId","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8e936bb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBock_container__2GOYp\",\"headingForm\":\"PhoneBock_headingForm__3MqGt\",\"contactList\":\"PhoneBock_contactList__2DNDS\",\"form\":\"PhoneBock_form__3KUmY\",\"labelName\":\"PhoneBock_labelName__WOdLR\",\"labelNumber\":\"PhoneBock_labelNumber__3jsHy\",\"btnForm\":\"PhoneBock_btnForm__1sUfb\",\"containerSearch\":\"PhoneBock_containerSearch__x8_p2\",\"btnList\":\"PhoneBock_btnList__3IArz\"};","import { useState } from \"react\";\n\nimport shortid from \"shortid\";\nimport s from \"./PhoneBock.module.css\";\n\nexport default function Form({ contactList, onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const InputValues = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const addContact = (e) => {\n    const lengthInputNemeChech = name.length;\n    const lengthInputNumberChech = number.length;\n    e.preventDefault();\n    if (lengthInputNemeChech < 2 || lengthInputNemeChech > 10) {\n      alert('Введіть ім\"я більше 1-го символа і не більше 10');\n      return;\n    }\n    if (lengthInputNumberChech < 7 || lengthInputNumberChech > 10) {\n      alert(\"Введіть номер більше 7-ми цифр і не більше 10\");\n      return;\n    }\n\n    const checkName = contactList(name);\n    if (checkName) {\n      alert('Це ім\"я вже існує');\n\n      return;\n    }\n\n    onSubmit({\n      id: shortid.generate(),\n      name,\n      number,\n    });\n    resetInputValues();\n  };\n\n  const resetInputValues = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const idName = shortid.generate();\n  const idNumber = shortid.generate();\n  return (\n    <form className={s.form} onSubmit={addContact}>\n      <label htmlFor={idName} className={s.labelName}>\n        Им'я\n      </label>\n      <input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <label htmlFor={idNumber} className={s.labelNumber}>\n        Номер\n      </label>\n      <input\n        id={idNumber}\n        placeholder=\"(0xx) xxx-xx-xx\"\n        type=\"tel\"\n        pattern=\"^[ 0-9]+$\"\n        name=\"number\"\n        value={number}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <button className={s.btnForm} type=\"submite\">\n        Додати контакт\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './PhoneBock.module.css';\n\nexport default function СontactList({ contactList, onDeleted }) {\n  return (\n    <ul className={'js-list'}>\n      {contactList.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <span>{name}: </span>\n            <span>\n              +38 <a href={`tel: ${number}`}>{number}</a>\n            </span>\n            <button\n              className={s.btnList}\n              type=\"button\"\n              onClick={() => onDeleted(id)}\n            >\n              Видалити\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nСontactList.propTypes = {\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './PhoneBock.module.css';\n\nexport default function SearchContact({ velue, SearchContact }) {\n  const id = shortid.generate();\n  return (\n    <div className={s.containerSearch}>\n      <label className={s.labelSearch} htmlFor={id}>\n        Поиск контакта по имени\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={velue}\n        onChange={SearchContact}\n        id={id}\n        className={s.inputSearch}\n      ></input>\n    </div>\n  );\n}\nSearchContact.propTypes = {\n  velue: PropTypes.string.isRequired,\n  SearchContact: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\n// import shortid from 'shortid';\nimport s from \"./components/PhoneBock.module.css\";\n\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport SearchContact from \"./components/SearchContact\";\n\nexport default function Mobile() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (NewContact) => {\n    setContacts([NewContact, ...contacts]);\n  };\n  const veluesFilter = (e) => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n  const getFilter = () => {\n    const filterValues = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterValues)\n    );\n  };\n\n  const onCheckName = (newName, numbers) => {\n    return contacts.some(\n      ({ name }) => name === Object.values(newName).join(\"\")\n    );\n  };\n\n  const deletedContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.headingForm}>Телефонна книга</h1>\n      <Form onSubmit={addContact} contactList={onCheckName} />\n      <h2 className={s.contactList}>Контакти</h2>\n      <SearchContact velue={filter} SearchContact={veluesFilter} />\n      <ContactList contactList={getFilter()} onDeleted={deletedContact} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}